// <auto-generated />
using System;
using Ewallet.Core.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ewallet.Core.Infrastructure.Migrations
{
    [DbContext(typeof(EwalletDbContext))]
    [Migration("20240505172230_Accounts")]
    partial class Accounts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Ewallet.Core.Domain.Accounts.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Initial")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts", (string)null);
                });

            modelBuilder.Entity("Ewallet.Core.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Ewallet.Core.Domain.Accounts.Account", b =>
                {
                    b.OwnsMany("Ewallet.Core.Domain.Accounts.AccountStatement", "Statements", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("ClosingBalance")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("TotalCredit")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("TotalDebit")
                                .HasColumnType("TEXT");

                            b1.HasKey("AccountId", "Id");

                            b1.ToTable("AccountStatements", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.OwnsMany("Ewallet.Core.Domain.Accounts.AccountTransaction", "Transactions", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Date")
                                .HasColumnType("TEXT");

                            b1.Property<int>("TransactionType")
                                .HasColumnType("INTEGER");

                            b1.HasKey("AccountId", "Id");

                            b1.ToTable("AccountTransactions", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.Navigation("Statements");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Ewallet.Core.Domain.Users.User", b =>
                {
                    b.HasOne("Ewallet.Core.Domain.Accounts.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
